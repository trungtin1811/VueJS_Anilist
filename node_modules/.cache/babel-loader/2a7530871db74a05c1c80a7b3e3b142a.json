{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://s4.anilist.co/file/anilistcdn/media/anime/cover/large/bx141014-eRFDPNpf3hI7.jpg\",\n  alt: \"\",\n  class: \"rounded-md w-72 my-5\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"capitalize anime-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, _toDisplayString($data.data.media[1].id), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAIE,KAJF,EAIE;AAHAC,KAAG,EAAC,yFAGJ;AAFAC,KAAG,EAAC,EAEJ;AADAC,OAAK,EAAC;AACN,CAJF;;AAAA;;;AAKKA,OAAK,EAAC;;;uBANbC,oBAOM,KAPN,EAOM,IAPN,EAOM,CANJC,UAMI,EADJL,oBAA+D,KAA/D,cAA+DM,iBAAzBC,WAAKC,KAAL,CAAU,CAAV,EAAcC,EAAW,CAA/D,EAAsD;AAAA;AAAtD,GACI,CAPN","names":["_createElementVNode","src","alt","class","_createElementBlock","_hoisted_1","_toDisplayString","$data","media","id"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\vue\\clone-anilist\\src\\components\\AnimeSubSection.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <img\r\n      src=\"https://s4.anilist.co/file/anilistcdn/media/anime/cover/large/bx141014-eRFDPNpf3hI7.jpg\"\r\n      alt=\"\"\r\n      class=\"rounded-md w-72 my-5\"\r\n    />\r\n    <div class=\"capitalize anime-name\">{{ data.media[1].id }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"data-sub-section\",\r\n  data() {\r\n    return {\r\n      data: getData(),\r\n    };\r\n  },\r\n  methods: {},\r\n};\r\nwindow.onload = () => {\r\n  fetch(url, options).then(handleResponse).then(handleData);\r\n};\r\nvar query = `query{\r\n    Page (page: 1, perPage: 5) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n        \r\n      }\r\n      media (type:ANIME) {\r\n        id\r\n        title {\r\n          romaji\r\n        }\r\n        status\r\n        description\r\n      }\r\n    }\r\n  }`;\r\nvar url = \"https://graphql.anilist.co\",\r\n  options = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      query: query,\r\n    }),\r\n  };\r\n\r\nfunction handleResponse(response) {\r\n  return response.json().then(function (json) {\r\n    return response.ok ? json : Promise.reject(json);\r\n  });\r\n}\r\nvar anime;\r\n\r\nfunction handleData(data) {\r\n  anime = data;\r\n}\r\nfunction getData() {\r\n  console.log(data)\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}