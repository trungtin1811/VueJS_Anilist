{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"search\"\n};\nconst _hoisted_2 = {\n  class: \"search__container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"anime-list flex justify-between flex-wrap space-x-3 mt-10\"\n};\nconst _hoisted_5 = [\"anime\"];\nconst _hoisted_6 = {\n  class: \"anime-item\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"capitalize anime-name w-full\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.list.length != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, anime => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: anime.id,\n      anime: anime\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_router_link, {\n      to: '/anime/' + anime.id\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        alt: \"\",\n        class: \"rounded-md w-72 my-5 anime-cover\",\n        src: anime.coverImage.extraLarge\n      }, null, 8\n      /* PROPS */\n      , _hoisted_7), _createElementVNode(\"div\", _hoisted_8, _toDisplayString(anime.title.romaji), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"])])], 8\n    /* PROPS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;AACWA,IAAE,EAAC;;;AACLC,OAAK,EAAC;;;;;;AAEFA,OAAK,EAAC;;;;AAEFA,OAAK,EAAC;;;;AAOFA,OAAK,EAAC;;;;;uBAZzBC,oBAqBU,SArBV,cAqBU,CApBRC,oBAmBM,KAnBN,cAmBM,CAlBOC,WAAKC,MAAL,IAAW,mBAAtBH,oBAiBM,KAjBN,EAiBMI,UAjBN,EAiBM,CAhBJH,oBAeM,KAfN,cAeM,oBAdJD,oBAaMK,SAbN,EAaM,IAbN,EAaMC,YAbeJ,UAaf,EAbMK,KAAa,IAAR;yBAAjBP,oBAaM,KAbN,EAaM;AAbsBQ,SAAG,EAAED,KAAK,CAACT,EAajC;AAbsCS,WAAK,EAAEA;AAa7C,KAbN,GACEN,oBAWM,KAXN,cAWM,CAVJQ,aAScC,sBATd,EASc;AATAC,QAAE,cAAcJ,KAAK,CAACT;AAStB,KATd;wBACE,MAIE,CAJFG,oBAIE,KAJF,EAIE;AAHAW,WAAG,EAAC,EAGJ;AAFAb,aAAK,EAAC,kCAEN;AADCc,WAAG,EAAEN,KAAK,CAACO,UAAN,CAAiBC;AACvB,OAJF;;AAAA,mBAIE,EACFd,oBAEM,KAFN,cAEMe,iBADDT,KAAK,CAACU,KAAN,CAAYC,MACX,CAFN,EACuB;AAAA;AADvB,OADE;;;;KALJ;;AAAA,aAUI,CAXN,EADF;;AAAA;GAaM,CAbN;;AAAA,GAcI,EAfN,CAgBI,CAjBN,sCAkBI,CAnBN,CAoBQ,CArBV","names":["id","class","_createElementBlock","_createElementVNode","$data","length","_hoisted_3","_Fragment","_renderList","anime","key","_createVNode","_component_router_link","to","alt","src","coverImage","extraLarge","_toDisplayString","title","romaji"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\vue\\clone-anilist\\src\\components\\search\\SearchContent.vue"],"sourcesContent":["<template>\r\n  <section id=\"search\">\r\n    <div class=\"search__container\">\r\n      <div v-if=\"list.length != 0\">\r\n        <div class=\"anime-list flex justify-between flex-wrap space-x-3 mt-10\">\r\n          <div v-for=\"anime in list\" :key=\"anime.id\" :anime=\"anime\">\r\n            <div class=\"anime-item\">\r\n              <router-link :to=\"'/anime/' + anime.id\">\r\n                <img\r\n                  alt=\"\"\r\n                  class=\"rounded-md w-72 my-5 anime-cover\"\r\n                  :src=\"anime.coverImage.extraLarge\"\r\n                />\r\n                <div class=\"capitalize anime-name w-full\">\r\n                  {{ anime.title.romaji }}\r\n                </div>\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"search-content\",\r\n  props: {},\r\n  data() {\r\n    return {\r\n      list: {},\r\n    };\r\n  },\r\n  components: {},\r\n  created() {\r\n    var sectionId = this.$route.params.sectionId;\r\n    console.log(this.$route.query.searchValue);\r\n\r\n    const mapping = {\r\n      trending: \"sort: TRENDING_DESC\",\r\n      \"this-season\": \"season: SPRING, seasonYear: 2022, sort: POPULARITY_DESC\",\r\n      \"next-season\": \"season: SUMMER, seasonYear: 2022, sort: POPULARITY_DESC\",\r\n      \"all-time\": \"sort: POPULARITY_DESC\",\r\n      top: \"sort: SCORE_DESC\",\r\n    };\r\n    var query =\r\n      `query {\r\n  Page(page: 1, perPage: 100) {\r\n    media(type: ANIME, ` +\r\n      mapping[sectionId] +\r\n      `) {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n    }\r\n  }\r\n}`;\r\n    var url = \"https://graphql.anilist.co\",\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: query,\r\n        }),\r\n      };\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.list = data.data.Page.media;\r\n        console.log(this.list);\r\n      });\r\n  },\r\n  updated() {\r\n    console.log(this.$route.query.searchValue);\r\n\r\n    if (this.$route.query.searchValue != undefined) {\r\n      var query =\r\n        `query {\r\n  Page(page: 1, perPage: 100) {\r\n    media(type: ANIME, search: \"` +\r\n        this.$route.query.searchValue +\r\n        `\") {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n    }\r\n  }\r\n}`;\r\n      var url = \"https://graphql.anilist.co\",\r\n        options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: query,\r\n          }),\r\n        };\r\n      fetch(url, options)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.list = data.data.Page.media;\r\n          console.log(this.list);\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.search__container {\r\n  max-width: 1200px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}