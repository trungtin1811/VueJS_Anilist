{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"search\"\n};\nconst _hoisted_2 = {\n  class: \"search__container\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"anime-list flex justify-between flex-wrap space-x-3 mt-10\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AnimeSubSection = _resolveComponent(\"AnimeSubSection\");\n\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$data.list.length != 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" <div v-for=\\\"anime in list\\\" :key=\\\"anime.id\\\" :anime=\\\"anime\\\"> \"), _createCommentVNode(\" <div class=\\\"anime-item\\\">\\r\\n              <router-link :to=\\\"'/anime/' + anime.id\\\">\\r\\n                <img\\r\\n                  alt=\\\"\\\"\\r\\n                  class=\\\"rounded-md w-72 my-5 anime-cover\\\"\\r\\n                  :src=\\\"anime.coverImage.extraLarge\\\"\\r\\n                />\\r\\n                <div class=\\\"capitalize anime-name w-full\\\">\\r\\n                  {{ anime.title.romaji }}\\r\\n                </div>\\r\\n              </router-link>\\r\\n            </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, anime => {\n    return _openBlock(), _createBlock(_component_AnimeSubSection, {\n      key: anime.id,\n      anime: anime\n    }, null, 8\n    /* PROPS */\n    , [\"anime\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createCommentVNode(\" </div> \")])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":";;AACWA,IAAE,EAAC;;;AACLC,OAAK,EAAC;;;;;;AAEFA,OAAK,EAAC;;;;;uBAHjBC,oBAuBU,SAvBV,cAuBU,CAtBRC,oBAqBM,KArBN,cAqBM,CApBOC,WAAKC,MAAL,IAAW,mBAAtBH,oBAmBM,KAnBN,EAmBMI,UAnBN,EAmBM,CAlBJH,oBAiBM,KAjBN,cAiBM,CAhBJI,yFAgBI,EAfJA,mfAeI,qBAHJL,oBACkBM,SADlB,EACkB,IADlB,EACkBC,YADeL,UACf,EADMM,KAAa,IAAR;yBAA7BC,aACkBC,0BADlB,EACkB;AADsBC,SAAG,EAAEH,KAAK,CAACV,EACjC;AADsCU,WAAK,EAAEA;AAC7C,KADlB;;AAAA;GACkB,CADlB;;AAAA,GAGI,GADJH,+BACI,CAjBN,CAkBI,CAnBN,sCAoBI,CArBN,CAsBQ,CAvBV","names":["id","class","_createElementBlock","_createElementVNode","$data","length","_hoisted_3","_createCommentVNode","_Fragment","_renderList","anime","_createBlock","_component_AnimeSubSection","key"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\vue\\clone-anilist\\src\\components\\search\\SearchContent.vue"],"sourcesContent":["<template>\r\n  <section id=\"search\">\r\n    <div class=\"search__container\">\r\n      <div v-if=\"list.length != 0\">\r\n        <div class=\"anime-list flex justify-between flex-wrap space-x-3 mt-10\">\r\n          <!-- <div v-for=\"anime in list\" :key=\"anime.id\" :anime=\"anime\"> -->\r\n          <!-- <div class=\"anime-item\">\r\n              <router-link :to=\"'/anime/' + anime.id\">\r\n                <img\r\n                  alt=\"\"\r\n                  class=\"rounded-md w-72 my-5 anime-cover\"\r\n                  :src=\"anime.coverImage.extraLarge\"\r\n                />\r\n                <div class=\"capitalize anime-name w-full\">\r\n                  {{ anime.title.romaji }}\r\n                </div>\r\n              </router-link>\r\n            </div> -->\r\n          <AnimeSubSection v-for=\"anime in list\" :key=\"anime.id\" :anime=\"anime\">\r\n          </AnimeSubSection>\r\n          <!-- </div> -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport AnimeSubSection from \"../home/AnimeSubSection.vue\";\r\nexport default {\r\n  name: \"search-content\",\r\n  props: {},\r\n  data() {\r\n    return {\r\n      list: [],\r\n    };\r\n  },\r\n  components: { AnimeSubSection },\r\n  created() {\r\n    var sectionId = this.$route.params.sectionId;\r\n    console.log(this.$route.query.searchValue);\r\n    const mapping = {\r\n      trending: \"sort: TRENDING_DESC\",\r\n      \"this-season\": \"season: SPRING, seasonYear: 2022, sort: POPULARITY_DESC\",\r\n      \"next-season\": \"season: SUMMER, seasonYear: 2022, sort: POPULARITY_DESC\",\r\n      \"all-time\": \"sort: POPULARITY_DESC\",\r\n      top: \"sort: SCORE_DESC\",\r\n    };\r\n    if (\r\n      mapping[sectionId] != undefined &&\r\n      this.$route.query.searchValue != \"\"\r\n    ) {\r\n      var query =\r\n        `query {\r\n  Page(page: 1, perPage: 100) {\r\n    media(type: ANIME, ` +\r\n        mapping[sectionId] +\r\n        `) {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n      nextAiringEpisode {\r\n        episode\r\n        timeUntilAiring\r\n      }\r\n      studios(sort: FAVOURITES_DESC) {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n      format\r\n      meanScore\r\n      genres\r\n    }\r\n  }\r\n}`;\r\n      var url = \"https://graphql.anilist.co\",\r\n        options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: query,\r\n          }),\r\n        };\r\n      fetch(url, options)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.list = data?.data?.Page?.media;\r\n        });\r\n    } else if (this.$route.query.searchValue == \"\") {\r\n      this.$router.push(\"/home\");\r\n    }\r\n  },\r\n  updated() {\r\n    console.log(this.$route.query.searchValue);\r\n\r\n    if (\r\n      this.$route.query.searchValue != undefined &&\r\n      this.$route.query.searchValue != \"\"\r\n    ) {\r\n      var query =\r\n        `query {\r\n  Page(page: 1, perPage: 50) {\r\n    media(type: ANIME, search: \"` +\r\n        this.$route.query.searchValue +\r\n        `\") {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n    }\r\n  }\r\n}`;\r\n      var url = \"https://graphql.anilist.co\",\r\n        options = {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: query,\r\n          }),\r\n        };\r\n      fetch(url, options)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.list = data?.data?.Page?.media;\r\n          console.log(this.list);\r\n        });\r\n    } else if (this.$route.query.searchValue == \"\") {\r\n      this.$router.push(\"/home\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.search__container {\r\n  max-width: 1200px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}