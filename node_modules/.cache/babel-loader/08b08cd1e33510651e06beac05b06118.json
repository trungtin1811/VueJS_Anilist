{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"content\",\n  class: \"flex justify-center\"\n};\nconst _hoisted_2 = {\n  class: \"content-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainFilter = _resolveComponent(\"MainFilter\");\n\n  const _component_AnimeSection = _resolveComponent(\"AnimeSection\");\n\n  const _component_TopAnime = _resolveComponent(\"TopAnime\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_MainFilter), _createVNode(_component_AnimeSection, {\n    sectionId: 'trending',\n    sectionName: 'trending now',\n    list: $setup.list1\n  }, null, 8\n  /* PROPS */\n  , [\"list\"]), _createVNode(_component_AnimeSection, {\n    sectionId: 'thisSeason',\n    sectionName: 'popular this season',\n    list: $setup.list2\n  }, null, 8\n  /* PROPS */\n  , [\"list\"]), _createVNode(_component_AnimeSection, {\n    sectionId: 'nextSeason',\n    sectionName: 'upcoming next season',\n    list: $setup.list3\n  }, null, 8\n  /* PROPS */\n  , [\"list\"]), _createVNode(_component_AnimeSection, {\n    sectionId: 'allTime',\n    sectionName: 'all time popular',\n    list: $setup.list4\n  }, null, 8\n  /* PROPS */\n  , [\"list\"]), _createVNode(_component_TopAnime, {\n    sectionId: 'top',\n    sectionName: 'top 100 anime',\n    list: $setup.list5\n  }, null, 8\n  /* PROPS */\n  , [\"list\"])])]);\n}","map":{"version":3,"mappings":";;AACOA,IAAE,EAAC;AAAUC,OAAK,EAAC;;;AACjBA,OAAK,EAAC;;;;;;;;;uBADbC,oBA2BM,KA3BN,cA2BM,CA1BJC,oBAyBM,KAzBN,cAyBM,CAxBJC,aAAcC,qBAAd,CAwBI,EAvBJD,aAIEE,uBAJF,EAIE;AAHCC,aAAS,EAAE,UAGZ;AAFCC,eAAW,EAAE,cAEd;AADCC,QAAI,EAAEC;AACP,GAJF;;AAAA,aAuBI,EAlBJN,aAIEE,uBAJF,EAIE;AAHCC,aAAS,EAAE,YAGZ;AAFCC,eAAW,EAAE,qBAEd;AADCC,QAAI,EAAEC;AACP,GAJF;;AAAA,aAkBI,EAbJN,aAIEE,uBAJF,EAIE;AAHCC,aAAS,EAAE,YAGZ;AAFCC,eAAW,EAAE,sBAEd;AADCC,QAAI,EAAEC;AACP,GAJF;;AAAA,aAaI,EARJN,aAIEE,uBAJF,EAIE;AAHCC,aAAS,EAAE,SAGZ;AAFCC,eAAW,EAAE,kBAEd;AADCC,QAAI,EAAEC;AACP,GAJF;;AAAA,aAQI,EAHJN,aAEkBO,mBAFlB,EAEkB;AAFPJ,aAAS,EAAE,KAEJ;AADfC,eAAW,EAAE,eACE;AAAfC,QAAI,EAAEC;AAAS,GAFlB;;AAAA,aAGI,CAzBN,CA0BI,CA3BN","names":["id","class","_createElementBlock","_createElementVNode","_createVNode","_component_MainFilter","_component_AnimeSection","sectionId","sectionName","list","$setup","_component_TopAnime"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\vue\\clone-anilist\\src\\components\\Content.vue"],"sourcesContent":["<template>\r\n  <div id=\"content\" class=\"flex justify-center\">\r\n    <div class=\"content-container\">\r\n      <MainFilter />\r\n      <AnimeSection\r\n        :sectionId=\"'trending'\"\r\n        :sectionName=\"'trending now'\"\r\n        :list=\"list1\"\r\n      />\r\n      <AnimeSection\r\n        :sectionId=\"'thisSeason'\"\r\n        :sectionName=\"'popular this season'\"\r\n        :list=\"list2\"\r\n      />\r\n      <AnimeSection\r\n        :sectionId=\"'nextSeason'\"\r\n        :sectionName=\"'upcoming next season'\"\r\n        :list=\"list3\"\r\n      />\r\n      <AnimeSection\r\n        :sectionId=\"'allTime'\"\r\n        :sectionName=\"'all time popular'\"\r\n        :list=\"list4\"\r\n      />\r\n      <TopAnime :sectionId=\"'top'\"\r\n        :sectionName=\"'top 100 anime'\"\r\n        :list=\"list5\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MainFilter from \"./Filter.vue\";\r\nimport AnimeSection from \"./AnimeSection.vue\";\r\nimport TopAnime from \"./TopAnime.vue\";\r\nimport { ref } from \"vue\";\r\n\r\nexport default {\r\n  name: \"comp-content\",\r\n  components: {\r\n    MainFilter,\r\n    AnimeSection,\r\n    TopAnime,\r\n  },\r\n  setup() {\r\n    var url = \"https://graphql.anilist.co\";\r\n\r\n    var listQuery = [\r\n      {\r\n        id: \"trending\",\r\n        options: {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query {\r\n  Page(page: 1, perPage: 5) {\r\n    media(type: ANIME, sort: TRENDING_DESC) {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n    }\r\n  }\r\n}`,\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        id: \"thisSeason\",\r\n        options: {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query{\r\n  Page(page: 1, perPage: 5) {\r\n    media(type: ANIME, season: SPRING, seasonYear: 2022, sort: POPULARITY_DESC) {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n    }\r\n  }\r\n}`,\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        id: \"nextSeason\",\r\n        options: {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query{\r\n    Page(page: 1, perPage: 5) {\r\n      media(type: ANIME, season: SUMMER, seasonYear: 2022, sort: POPULARITY_DESC) {\r\n        id\r\n        title {\r\n          romaji\r\n        }\r\n        status\r\n        description\r\n        coverImage {\r\n          extraLarge\r\n        }\r\n        season\r\n        seasonYear\r\n      }\r\n    }\r\n  }`,\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        id: \"allTime\",\r\n        options: {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query{\r\n    Page(page: 1, perPage: 5) {\r\n      media(type: ANIME, sort: POPULARITY_DESC) {\r\n        id\r\n        title {\r\n          romaji\r\n        }\r\n        status\r\n        description\r\n        coverImage {\r\n          extraLarge\r\n        }\r\n        season\r\n        seasonYear\r\n      }\r\n    }\r\n  }`,\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        id: \"allTime\",\r\n        options: {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query{\r\n    Page(page: 1, perPage: 5) {\r\n      media(type: ANIME, sort: SCORE_DESC) {\r\n        id\r\n        title {\r\n          romaji\r\n        }\r\n        status\r\n        description\r\n        coverImage {\r\n          extraLarge\r\n        }\r\n        season\r\n        seasonYear\r\n        meanScore\r\n        \r\n      }\r\n    }\r\n  }`,\r\n          }),\r\n        },\r\n      },\r\n    ];\r\n\r\n    const list = [ref(), ref(), ref(), ref(), ref()];\r\n    for (let i = 0; i < list.length; i++) {\r\n      fetch(url, listQuery[i].options)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          list[i].value = data.data.Page.media;\r\n        });\r\n    }\r\n    var [list1, list2, list3, list4, list5] = list;\r\n    return { list1, list2, list3, list4, list5};\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#content {\r\n  padding: 100px 188px;\r\n  background-color: rgb(229, 235, 241);\r\n}\r\n.content-container {\r\n  max-width: 1200px;\r\n  width: 100%;\r\n}\r\n.section-title {\r\n  font-weight: 700 !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}