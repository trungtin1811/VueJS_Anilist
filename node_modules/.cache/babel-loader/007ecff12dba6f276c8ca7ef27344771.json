{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"anime-list flex justify-between\"\n};\nconst _hoisted_2 = [\"anime\"];\nconst _hoisted_3 = {\n  class: \"anime-item\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"capitalize anime-name w-full\"\n};\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.list, anime => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: anime.id,\n      anime: anime\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n      to: '/anime/' + anime.id\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"img\", {\n        alt: \"\",\n        class: \"rounded-md w-72 my-5 anime-cover\",\n        src: anime.coverImage.extraLarge\n      }, null, 8\n      /* PROPS */\n      , _hoisted_4), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(anime.title.romaji), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"])])], 8\n    /* PROPS */\n    , _hoisted_2);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;;AAEFA,OAAK,EAAC;;;;AAOFA,OAAK,EAAC;;;;;uBATnBC,oBAeM,KAfN,cAeM,oBAdJA,oBAaMC,SAbN,EAaM,IAbN,EAaMC,YAbeC,SAaf,EAbMC,KAAa,IAAR;yBAAjBJ,oBAaM,KAbN,EAaM;AAbsBK,SAAG,EAAED,KAAK,CAACE,EAajC;AAbsCF,WAAK,EAAEA;AAa7C,KAbN,GACEG,oBAWM,KAXN,cAWM,CAVJC,aAScC,sBATd,EASc;AATAC,QAAE,cAAcN,KAAK,CAACE;AAStB,KATd;wBACE,MAIE,CAJFC,oBAIE,KAJF,EAIE;AAHAI,WAAG,EAAC,EAGJ;AAFAZ,aAAK,EAAC,kCAEN;AADCa,WAAG,EAAER,KAAK,CAACS,UAAN,CAAiBC;AACvB,OAJF;;AAAA,mBAIE,EACFP,oBAEM,KAFN,cAEMQ,iBADDX,KAAK,CAACY,KAAN,CAAYC,MACX,CAFN,EACuB;AAAA;AADvB,OADE;;;;KALJ;;AAAA,aAUI,CAXN,EADF;;AAAA;GAaM,CAbN;;AAAA,GAcI,EAfN","names":["class","_createElementBlock","_Fragment","_renderList","_ctx","anime","key","id","_createElementVNode","_createVNode","_component_router_link","to","alt","src","coverImage","extraLarge","_toDisplayString","title","romaji"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\vue\\clone-anilist\\src\\components\\search\\SearchContent.vue"],"sourcesContent":["<template>\r\n  <div class=\"anime-list flex justify-between\">\r\n    <div v-for=\"anime in list\" :key=\"anime.id\" :anime=\"anime\">\r\n      <div class=\"anime-item\">\r\n        <router-link :to=\"'/anime/' + anime.id\">\r\n          <img\r\n            alt=\"\"\r\n            class=\"rounded-md w-72 my-5 anime-cover\"\r\n            :src=\"anime.coverImage.extraLarge\"\r\n          />\r\n          <div class=\"capitalize anime-name w-full\">\r\n            {{ anime.title.romaji }}\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"search-content\",\r\n  props: {},\r\n  data() {\r\n    return {\r\n      list: {},\r\n    };\r\n  },\r\n  created() {\r\n    var query = `query {\r\n  Page(page: 1, perPage: 5) {\r\n    media(type: ANIME, sort: TRENDING_DESC) {\r\n      id\r\n      title {\r\n        romaji\r\n      }\r\n      status\r\n      description\r\n      coverImage {\r\n        extraLarge\r\n      }\r\n      season\r\n      seasonYear\r\n      trending\r\n    }\r\n  }\r\n}`;\r\n    var url = \"https://graphql.anilist.co\",\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: query,\r\n        }),\r\n      };\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.list = data.;\r\n        console.log(this.list);\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}